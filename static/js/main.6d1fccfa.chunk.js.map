{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/Notifications/Notifications.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["removeTodo","type","setTodo","todo","payload","actionTodos","currentTodoReducer","state","action","actions","todos","query","filterReducer","filter","title","toLowerCase","includes","completed","todosReducer","rootReducer","combineReducers","currentTodo","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoList","filtredTodos","dispatchSelectedTodo","length","className","map","id","onClick","hendlerSetTodo","TodoFilter","dispatch","useState","setQuery","filterBy","setFilterBy","useEffect","onSubmit","event","preventDefault","value","onChange","e","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","Notifications","TodoModal","isLoad","setIsLoad","isError","setIsError","selectedTodo","user","setUser","fetchSelectedTodo","a","userFromAPI","userId","hendlerClose","href","email","name","App","dispatchTodos","fetchTodos","todosFromAPI","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6d1fccfa.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\n// payload is a typical name for an action data\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\n// Action creator return type protect us from a mistype\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\n// These actions will be used in the application\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/REMOVE':\n      return null;\n\n    case 'currentTodo/SET':\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport const actionTodos = {\n  setTodo,\n  removeTodo,\n};\n\nexport default currentTodoReducer;\n","import { Todo } from '../types/Todo';\n\nconst filter = (todos: Todo[], type: string, query: string) => ({\n  todos,\n  type,\n  query,\n});\n\nexport const actions = {\n  filter,\n};\n\ntype Action = {\n  todos: Todo[],\n  type: string,\n  query: string,\n};\n\nconst filterReducer = (state: Todo[] = [], action: Action): Todo[] => {\n  switch (action.type) {\n    case 'all':\n      return (\n        action.query === ''\n          ? action.todos\n          : [...action.todos].filter(todo => (\n            todo.title.toLowerCase().includes(action.query.toLowerCase())\n          ))\n      );\n\n    case 'active':\n    case 'completed':\n      return [...action.todos].filter(todo => {\n        if (action.type === 'active') {\n          return (\n            todo.completed\n            && todo.title.toLowerCase().includes(action.query.toLowerCase())\n          );\n        }\n\n        return (\n          !todo.completed\n          && todo.title.toLowerCase().includes(action.query.toLowerCase())\n        );\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype Action = {\n  type: 'SET/Todos',\n  payload: Todo[],\n};\n\nconst setTodos = (todos: Todo[]): Action => ({\n  type: 'SET/Todos',\n  payload: todos,\n});\n\nconst todosReducer = (state: Todo[] = [], action: Action): Todo[] => {\n  if (action.type === 'SET/Todos') {\n    return action.payload;\n  }\n\n  return state;\n};\n\nexport const action = {\n  setTodos,\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable max-len */\nimport { FC } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actionTodos } from '../../features/currentTodo';\nimport { Todo } from '../../types/Todo';\n\nexport const TodoList: FC = () => {\n  const filtredTodos = useAppSelector(store => store.filter);\n  const dispatchSelectedTodo = useAppDispatch();\n  const hendlerSetTodo = (todo: Todo) => {\n    dispatchSelectedTodo(actionTodos.setTodo(todo));\n  };\n\n  return (\n    <>\n      {!filtredTodos.length ? (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      ) : (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {filtredTodos.map((todo) => (\n              <tr data-cy=\"todo\" key={todo.id}>\n                <td className=\"is-vcentered\">{todo.id}</td>\n                <td className=\"is-vcentered\">\n                  {todo.completed && (\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  )}\n                </td>\n\n                <td className=\"is-vcentered is-expanded\">\n                  <p\n                    className={\n                      `has-text-${todo.completed ? 'success' : 'danger'}`\n                    }\n                  >\n                    {todo.title}\n                  </p>\n                </td>\n\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => hendlerSetTodo(todo)}\n                  >\n                    <span className=\"icon\">\n                      <i className=\"far fa-eye\" />\n                    </span>\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { actions } from '../../features/filter';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\n\nexport const TodoFilter = () => {\n  const todos = useAppSelector(store => store.todos);\n  const dispatch = useAppDispatch();\n  const [query, setQuery] = useState('');\n  const [filterBy, setFilterBy] = useState('all');\n\n  useEffect(() => {\n    dispatch(actions.filter(todos, filterBy, query));\n  }, [todos, query, filterBy]);\n\n  const hendlerInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(e.target.value);\n  };\n\n  const hendlerSelect = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setFilterBy(e.target.value);\n  };\n\n  const resetInput = () => {\n    setQuery('');\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterBy}\n            onChange={hendlerSelect}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={hendlerInput}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={resetInput}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC } from 'react';\n\nexport const Notifications: FC = () => (\n  <p className=\"notification is-danger\">\n    Something went wrong\n  </p>\n);\n","import { FC, useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actionTodos } from '../../features/currentTodo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\nimport { Notifications } from '../Notifications';\n\nexport const TodoModal: FC = () => {\n  const [isLoad, setIsLoad] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const dispatchSelectedTodo = useAppDispatch();\n  const selectedTodo = useAppSelector(state => state.currentTodo);\n  const [user, setUser] = useState<User | null>(null);\n\n  const fetchSelectedTodo = async (id: number) => {\n    try {\n      setIsLoad(true);\n      setIsError(false);\n      const userFromAPI = await getUser(id);\n\n      setUser(userFromAPI);\n    } catch {\n      setIsError(true);\n    } finally {\n      setIsLoad(false);\n    }\n  };\n\n  useEffect(() => {\n    if (selectedTodo) {\n      fetchSelectedTodo(selectedTodo.userId);\n    }\n  }, [selectedTodo]);\n\n  const hendlerClose = () => {\n    dispatchSelectedTodo(actionTodos.removeTodo());\n    setUser(null);\n  };\n\n  if (!user && !isLoad && !selectedTodo) {\n    return null;\n  }\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoad && <Loader />}\n\n      {isError && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div className=\"modal-card-title\">\n              <Notifications />\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={hendlerClose}\n            />\n          </header>\n        </div>\n      )}\n\n      {user && selectedTodo && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={hendlerClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n              {' by '}\n              <a href={`mailto:${user.email}`}>{user.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { useAppDispatch } from './app/hooks';\nimport { action as actionTodos } from './features/todos';\nimport { Notifications } from './components/Notifications';\n\nexport const App: React.FC = () => {\n  const dispatchTodos = useAppDispatch();\n  const [isError, setIsError] = useState(false);\n  const [isLoad, setIsLoad] = useState(false);\n\n  const fetchTodos = async () => {\n    try {\n      setIsError(false);\n      setIsLoad(true);\n      const todosFromAPI = await getTodos();\n\n      dispatchTodos(actionTodos.setTodos(todosFromAPI));\n    } catch {\n      setIsError(true);\n    } finally {\n      setIsLoad(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            {!isLoad && !isError && <h1 className=\"title\">Todos:</h1>}\n\n            {isLoad && <Loader />}\n\n            {isError && <Notifications />}\n\n            {!isError && !isLoad && (\n              <>\n                <div className=\"block\">\n                  <TodoFilter />\n                </div>\n\n                <div className=\"block\">\n                  <TodoList />\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n      <TodoModal />\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}